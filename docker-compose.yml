version: '3'
services:
  web:
    image: slack-clone-server
    # while !</dev/tcp/db/5432
    # do sleep 1
    # done
    #  npm run migrate
    # npm run dev

    #  This will successfully wait for Postgres to start.
    # command: ["./wait-for-it.sh", "db:5432", "--", "node", "index.js"]
    command: bash -c 'while !< /dev/tcp/db/5432; do sleep 2; done; npm run create; npm run migrate:refresh; npm start'
    volumes:
      - .:/slack-clone-server
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    environment:
      DATABASE_URL_DEV: $DATABASE_URL_DEV
      DATABASE_URL: $DATABASE_URL
      REDIS_HOST: $REDIS_HOST
      SECRET: efe
      CLOUD_NAME: $CLOUD_NAME
      API_KEY: $API_KEY
      API_SECRET: $API_SECRET
      NODEMAILER_USER: $NODEMAILER_USER
      NODEMAILER_PASS: $NODEMAILER_PASS
    networks:
      - webnet

  db:
    image: postgres
    restart: always
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    networks:
      - webnet

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_HOST: $REDIS_HOST
    networks:
      - webnet
  
  # nginx:
  #   image: nginx
  #   volumes:
  #     - ./templates:/etc/nginx/templates
  #   ports:
  #     - '8000:80'
  #   depends_on: 
  #     - web
  #   networks:
  #     - webnet

networks:
  webnet:

  